<?php
declare(strict_types=1);

namespace HNV\Http\UriTests\ValuesProvider\IpAddress;

use HNV\Http\UriTests\ValuesProvider\ValuesProviderInterface;
/** ***********************************************************************************************
 * IP address V6 normalized values set provider.
 *
 * @package HNV\Psr\Http\Tests\Uri
 * @author  Hvorostenko
 *************************************************************************************************/
class V6 implements ValuesProviderInterface
{
    /** **********************************************************************
     * @inheritDoc
     ************************************************************************/
    public static function getValidValues(): array
    {
        return [
            '1234:5678:1357:2468:aabb:ccdd:eeff:ABCD'   => '1234:5678:1357:2468:aabb:ccdd:eeff:ABCD',
            '1234:123:12:1:abcd:ABCD:AbCd:FF'           => '1234:123:12:1:abcd:ABCD:AbCd:FF',
            '1a:2b:3c:4d:5e:6f:7:8'                     => '1a:2b:3c:4d:5e:6f:7:8',

            '1:2:3:4:5:6:7:8'                           => '1:2:3:4:5:6:7:8',
            '01:2:3:4:5:6:7:8'                          => '1:2:3:4:5:6:7:8',
            '001:2:3:4:5:6:7:8'                         => '1:2:3:4:5:6:7:8',
            '010:2:3:4:5:6:7:8'                         => '10:2:3:4:5:6:7:8',

            '1:2:3:4:5:6:0:0'                           => '1:2:3:4:5:6::',
            '0:0:3:4:5:6:7:8'                           => '::3:4:5:6:7:8',
            '1:2:3:0:0:6:7:8'                           => '1:2:3::6:7:8',

            '1:0:00:4:000:0000:0:8'                     => '1:0:0:4::8',
            '1:0:0:4:5:0:0:8'                           => '1::4:5:0:0:8',
            '0:00:000:0000:0:00:000:0000'               => '::',

            '1:2::'                                     => '1:2::',
            '::7:8'                                     => '::7:8',
            '1:2::7:8'                                  => '1:2::7:8',
            '::'                                        => '::',

            '1:2:3:4:5:6:1.0.0.1'                       => '1:2:3:4:5:6:1.0.0.1',
            '1:2:3:4::1.0.0.1'                          => '1:2:3:4::1.0.0.1',
            '1:2:3:4:0:0:1.0.0.1'                       => '1:2:3:4::1.0.0.1',

            '::3:4:5:6:1.0.0.1'                         => '::3:4:5:6:1.0.0.1',
            '1:2::5:6:1.0.0.1'                          => '1:2::5:6:1.0.0.1',
            '01:002:0000:000:5:6:01.010.000.1'          => '1:2::5:6:1.10.0.1',
        ];
    }
    /** **********************************************************************
     * @inheritDoc
     ************************************************************************/
    public static function getInvalidValues(): array
    {
        return [
            '1:2:3:4:5:6:7:g',
            '1:2:3:4:5:6:7:G',
            '1:2:3:4:5:6:7:-1',

            '1:2:3:4:5:6:7:8:9',
            '1:2:3:4:5:6:7',

            '00001:2:3:4:5:6:7:8',

            '1:2:::',
            ':::7:8',
            '1:2:::7:8',
            '1::5::8',
            ':::',

            '1:2:3:4:5:6:7::',
            '::2:3:4:5:6:7:8',

            '1:2:3:4:5:1.0.0.1',
            '1:2:3:4:5:6:7:1.0.0.1',
            '1:2:3:4:5:6:1.0.0.256',
            '1:2:3:4:5:6:1.0.0.-1',
            '1:2:3:4:5:6:1.0.0.0.1',

            '1:2:3:4:::1.0.0.1',
            '1:2:3:4:5::1.0.0.1',

            '::2:3:4:5:6:1.0.0.1',

            '1:2:3:4:5:6:1.0.0.1:',
            '1:2:3:4:5:6:1.0.0.1:0',
            '1:2:3:4:5:6:7:',
            ':2:3:4:5:6:7:8',
            '1:2:3::6:7:',
            ':2:3::6:7:8',
        ];
    }
}